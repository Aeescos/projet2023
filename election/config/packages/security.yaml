security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy: 
        ROLE_USER: [ROLE_USER]
        ROLE_CLIENT: [ROLE_USER]
        ROLE_PRESTATAIRE: [ROLE_CLIENT]
        ROLE_ADMIN: [ROLE_PRESTATAIRE]
        ROLE_ROOT: [ROLE_ADMIN]

    providers:
        users_in_memory:
            memory: ~
        
        users_provider:
            entity: 
                class: App\Entity\User
                property: email


    firewalls:
        login:
            pattern: ^/api/v1/auth/login
            stateless: true
            json_login:
                provider: users_provider
                check_path: /api/v1/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        security_controller:
            pattern: ^/api/v1/auth 
            security: false
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            provider: users_provider

            jwt: ~
            refresh_jwt:
                check_path: /api/token/refresh

       
        #main:
        #    access_denied_handler: App\EventSubscriber\CustomAccessDeniedHandler


    access_control:
        - { path: ^/api/(v1/auth/ | token/refresh | v1/admin/), roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/raport/, roles: [ROLE_PRESTATAIRE] }


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon